service: flight-service

frameworkVersion: '3'

custom:
  stage: ${opt:stage, 'dev'}
  tableName: ${self:service}-table-${self:custom.stage}

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  memorySize: 256
  stage: ${self:custom.stage}
  deploymentBucket:
    name: ${self:service}-deployment-bucket-${self:custom.stage}
    serverSideEncryption: AES256
  apiGateway:
    shouldStartNameWithService: true
  environment:
    TABLE_NAME: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - 'Fn::GetAtt': [FlightTable, Arn]

plugins:
  - serverless-plugin-typescript
  - serverless-deployment-bucket

package:
  individually: true
  patterns:
    - '!test/**'

functions:
  get-flight:
    handler: src/functions/get-flight.handler
    events:
      - httpApi: 'GET /flight'
  create-flight:
    handler: src/functions/create-flight.handler
    events:
      - httpApi: 'POST /flight'

resources:
  - ${file(resources/database.yml)}
